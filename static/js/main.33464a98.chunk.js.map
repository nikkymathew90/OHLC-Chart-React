{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Navigation/Navigation.js","components/Layout/Layout.js","axios-ohlc.js","containers/Home/Home.js","containers/LiveChart/LiveChart.js","App.js","serviceWorker.js","index.js","components/Layout/Layout.module.css","containers/Home/Home.module.css"],"names":["module","exports","Navigation","props","className","classes","NavigationContent","NavigationItems","NavigationItem","activeClassName","active","to","exact","Layout","Fragment","Main","this","children","Component","instance","axios","create","baseURL","Home","state","data","x","close","decreasing","line","color","high","increasing","low","open","type","xaxis","yaxis","layout","dragmode","autosize","width","height","margin","r","t","b","l","showlegend","autorange","title","error","componentDidMount","get","then","response","ohlcdata","reduce","acc","item","push","split","record","formatDate","chartData","setState","catch","message","console","log","dt","d","Date","Number","getFullYear","getMonth","getDate","LiveChart","io","socket","date","time","getHours","getMinutes","getSeconds","getData","on","emit","cb","dataArr","setTimeout","App","routes","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33464a98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1tTPb\",\"NavigationContent\":\"Navigation_NavigationContent__w_Unx\",\"NavigationItems\":\"Navigation_NavigationItems__eQ6OA\",\"NavigationItem\":\"Navigation_NavigationItem__3SoDy\",\"active\":\"Navigation_active__1Sofg\"};","import React from \"react\";\nimport classes from \"./Navigation.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = props => {\n  return (\n    <div className={classes.Navigation}>\n      <div className={classes.NavigationContent}>\n        <ul className={classes.NavigationItems}>\n          <li className={classes.NavigationItem}>\n            <NavLink activeClassName={classes.active} to=\"/\" exact>\n              Home\n            </NavLink>\n          </li>\n          <li className={classes.NavigationItem}>\n            <NavLink activeClassName={classes.active} to=\"/live-chart\" exact>\n              Live Chart\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport Navigation from \"../Navigation/Navigation\";\nimport classes from \"./Layout.module.css\";\n\nclass Layout extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navigation></Navigation>\n        <main className={classes.Main}>{this.props.children}</main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Layout;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://kaboom.rksv.net/api/\"\n});\n\nexport default instance;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"./../../axios-ohlc\";\nimport classes from \"./Home.module.css\";\n\nclass Home extends Component {\n  state = {\n    data: [\n      {\n        x: [],\n        close: [],\n        decreasing: { line: { color: \"#7F7F7F\" } },\n        high: [],\n        increasing: { line: { color: \"#17BECF\" } },\n        line: { color: \"rgba(31,119,180,1)\" },\n        low: [],\n        open: [],\n        type: \"ohlc\",\n        xaxis: \"x\",\n        yaxis: \"y\"\n      }\n    ],\n    layout: {\n      dragmode: \"zoom\",\n      autosize: true,\n      width: 800,\n      height: 500,\n      margin: {\n        r: 0,\n        t: 100,\n        b: 40,\n        l: 100\n      },\n      showlegend: false,\n      xaxis: {\n        autorange: true,\n        title: \"Date\",\n        type: \"date\"\n      },\n      yaxis: {\n        autorange: true,\n        type: \"linear\"\n      }\n    },\n    error: false\n  };\n\n  componentDidMount = () => {\n    axios\n      .get(\"historical?interval=1\")\n      .then(response => {\n        let ohlcdata = response.data\n          .reduce((acc, item) => {\n            acc.push(item.split(\",\"));\n            return acc;\n          }, [])\n          .reduce(\n            (acc, record) => {\n              acc.x.push(this.formatDate(record[0]));\n              acc.open.push(record[1]);\n              acc.high.push(record[2]);\n              acc.low.push(record[3]);\n              acc.close.push(record[4]);\n              return acc;\n            },\n            { x: [], open: [], close: [], high: [], low: [] }\n          );\n\n        let chartData = [{ ...this.state.data[0], ...ohlcdata }];\n        this.setState({ data: chartData });\n      })\n      .catch(error => {\n        this.setState({ error: error.message });\n        console.log(\"Error\", error.message);\n      });\n  };\n\n  formatDate = dt => {\n    let d = new Date(Number(dt));\n    let date = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\n    return date;\n  };\n\n  render() {\n    const chart = this.state.error ? (\n      <div className={classes.error}>Something went wrong!</div>\n    ) : (\n      <Plot data={this.state.data} layout={this.state.layout} />\n    );\n    return chart;\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport Plot from \"react-plotly.js\";\n\nconst socket = io(\"http://kaboom.rksv.net/watch\");\n//console.log(\"socket connection------>>\", socket.connected);\n\nclass LiveChart extends Component {\n  state = {\n    data: [\n      {\n        x: [],\n        close: [],\n        decreasing: { line: { color: \"#7F7F7F\" } },\n        high: [],\n        increasing: { line: { color: \"#17BECF\" } },\n        line: { color: \"rgba(31,119,180,1)\" },\n        low: [],\n        open: [],\n        type: \"ohlc\",\n        xaxis: \"x\",\n        yaxis: \"y\"\n      }\n    ],\n    layout: {\n      dragmode: \"zoom\",\n      autosize: true,\n      width: 800,\n      height: 500,\n      margin: {\n        r: 0,\n        t: 100,\n        b: 40,\n        l: 100\n      },\n      showlegend: false,\n      xaxis: {\n        autorange: true,\n        title: \"Date\",\n        type: \"date\"\n      },\n      yaxis: {\n        autorange: true,\n        type: \"linear\"\n      }\n    },\n    socket: null\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    const socket = io(\"http://kaboom.rksv.net/watch\");\n    this.setState({ socket: socket });\n    socket.on(\"connect\", () => {\n      socket.emit(\"sub\", { state: true });\n      socket.on(\"data\", (data, cb) => {\n        let dataArr = data.split(\",\");\n        let record = {\n          x: [...this.state.data[0].x],\n          open: [...this.state.data[0].open],\n          high: [...this.state.data[0].high],\n          low: [...this.state.data[0].low],\n          close: [...this.state.data[0].close]\n        };\n        record.x.push(this.formatDate(dataArr[0]));\n        record.open.push(dataArr[1]);\n        record.high.push(dataArr[2]);\n        record.low.push(dataArr[3]);\n        record.close.push(dataArr[4]);\n        let chartData = [{ ...this.state.data[0], ...record }];\n        this.setState({ data: chartData });\n        setTimeout(() => {\n          cb(1);\n        }, 900);\n      });\n      socket.on(\"error\", data => {\n        console.log(data);\n      });\n    });\n  }\n\n  formatDate = dt => {\n    let d = new Date(Number(dt));\n    let date = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\n    let time = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\n    return `${date} ${time}`;\n  };\n\n  componentWillUnmount() {\n    let socket = this.state.socket;\n    socket.emit(\"unsub\", { state: false });\n  }\n\n  render() {\n    return <Plot data={this.state.data} layout={this.state.layout} />;\n  }\n}\n\nexport default LiveChart;\n","import React, { Component } from \"react\";\nimport Layout from \"./components/Layout/Layout\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home/Home\";\nimport LiveChart from \"./containers/LiveChart/LiveChart\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/live-chart\" component={LiveChart} />\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    );\n\n    return (\n      <div>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Layout_Main__2zCf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Home_error__3hYwX\"};"],"sourceRoot":""}